{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,kBAC/BE,EAAOH,SAASC,cAAc,iBAC9BG,EAASJ,SAASC,cAAc,mBAatCF,EAAKM,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBACN,IAAIC,EAAkB,EAEhBC,EAAUC,aAAY,WAf9B,IAAuBC,EAAUC,EACzBC,EAeAL,GAAmBJ,EAAOU,MAC5BC,cAAcN,KAjBGE,EAoBLH,EAAkB,EApBHI,EAoBMV,EAAMY,MAnBrCD,EAAgBG,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GACvBP,EACFM,EAAQ,uBAAwCE,OAAfV,EAAS,QAAYU,OAANT,EAAM,OAEpDQ,EAAK,sBAAqCC,OAAfV,EAAS,QAAYU,OAANT,EAAM,M,KAejDU,MAAK,SAAAC,G,OAAYC,EAAA3B,GAAS4B,OAAOC,QAAQH,E,IACzCI,OAAM,SAAAC,G,OAAYJ,EAAA3B,GAAS4B,OAAOI,QAAQD,E,IAC7CpB,I,GACCL,EAAKW,M","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\n\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delay = document.querySelector(\"[name='delay']\");\nconst step = document.querySelector(\"[name='step']\");\nconst amount = document.querySelector(\"[name='amount']\");\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  });\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  let createdPromises = 0;\n\n  const timerId = setInterval(() => {\n    if (createdPromises >= amount.value) {\n      clearInterval(timerId);\n      return;\n    }\n    createPromise(createdPromises + 1, delay.value)\n      .then(resolved => Notiflix.Notify.success(resolved))\n      .catch(rejected => Notiflix.Notify.failure(rejected));\n    createdPromises++;\n  }, step.value);\n});\n"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","addEventListener","event","preventDefault","createdPromises","timerId","setInterval","position","delay1","shouldResolve","value","clearInterval","Math","random","Promise","resolve","reject","concat","then","resolved","$parcel$interopDefault","Notify","success","catch","rejected","failure"],"version":3,"file":"03-promises.baa14f3b.js.map"}